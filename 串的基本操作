#include <stdio.h>
#include <string.h>
#include <stdlib.h>

// 求串的长度
int myStrlen(const char *s) {
    int len = 0;
    while (s[len] != '\0') {
        len++;
    }
    return len;
}

// 串的连接
void myStrcat(char *dest, const char *src) {
    int i = myStrlen(dest);
    int j = 0;
    while (src[j] != '\0') {
        dest[i++] = src[j++];
    }
    dest[i] = '\0';
}

// 子串提取
void mySubstr(char *sub, const char *s, int pos, int len) {
    int i, j = 0;
    for (i = pos; i < pos + len && s[i] != '\0'; i++) {
        sub[j++] = s[i];
    }
    sub[j] = '\0';
}

// 串的比较
int myStrcmp(const char *s1, const char *s2) {
    while (*s1 != '\0' && *s2 != '\0') {
        if (*s1 < *s2) {
            return -1;
        } else if (*s1 > *s2) {
            return 1;
        }
        s1++;
        s2++;
    }
    if (*s1 == '\0' && *s2 == '\0') {
        return 0;
    } else if (*s1 == '\0') {
        return -1;
    } else {
        return 1;
    }
}

// 串的查找
int myStrfind(const char *s, const char *sub) {
    int len_s = myStrlen(s);
    int len_sub = myStrlen(sub);
    int i, j;
    for (i = 0; i <= len_s - len_sub; i++) {
        for (j = 0; j < len_sub; j++) {
            if (s[i + j] != sub[j]) {
                break;
            }
        }
        if (j == len_sub) {
            return i;
        }
    }
    return -1;
}

// 串的替换
void myStrreplace(char *s, const char *old_sub, const char *new_sub) {
    int len_old = myStrlen(old_sub);
    int len_new = myStrlen(new_sub);
    int len_s = myStrlen(s);
    char *temp = (char *)malloc(len_s + 1);
    int i, j, k;
    i = j = 0;
    while (i < len_s) {
        int match = 1;
        for (k = 0; k < len_old; k++) {
            if (s[i + k] != old_sub[k]) {
                match = 0;
                break;
            }
        }
        if (match) {
            for (k = 0; k < len_new; k++) {
                temp[j++] = new_sub[k];
            }
            i += len_old;
        } else {
            temp[j++] = s[i++];
        }
    }
    temp[j] = '\0';
    strcpy(s, temp);
    free(temp);
}


int main() {
    char s1[100] = "Hello";
    char s2[] = " world";
    char sub[50];
    int pos = 1, len = 3;

    // 测试求串长
    printf("串s1的长度: %d\n", myStrlen(s1));

    // 测试串连接
    myStrcat(s1, s2);
    printf("连接后的串: %s\n", s1);

    // 测试子串提取
    mySubstr(sub, s1, pos, len);
    printf("提取的子串: %s\n", sub);

    // 测试串比较
    char s3[] = "Hello world";
    char s4[] = "Hello world";
    printf("s3和s4比较结果: %d\n", myStrcmp(s3, s4));

    // 测试串查找
    char sub_str[] = "world";
    printf("子串在串中第一次出现的位置: %d\n", myStrfind(s1, sub_str));

    // 测试串替换
    char str[] = "Hello world";
    char old_sub[] = "world";
    char new_sub[] = "Python";
    myStrreplace(str, old_sub, new_sub);
    printf("替换后的串: %s\n", str);

    return 0;
}


